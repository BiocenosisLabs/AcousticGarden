/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, {useMemo, useRef} from 'react'
import { useGLTF,} from '@react-three/drei'
import {useFrame} from "@react-three/fiber";


let voxelMesh = null

export default function Lizzie({vl,refa,...props}) {
    const group = useRef()
    const {nodes, materials} = useGLTF('/lizzie-swirl-small.glb')

    const materialRef = useRef(null)
    const rand = useMemo(() => Math.random(), [])
    const strength = useRef(0)

    // console.log({nodes,materials})


    useFrame(({ clock }, dt) => {
        // if (materialRef?.current) {
        //     materialRef.current.uniforms.uTime.value = -clock.elapsedTime / 2
        // }

        if (!voxelMesh) {
           // vl(nodes.bird001.geometry).then((mesh) => voxelMesh = mesh)
           // console.log({voxelMesh})
        }
        // console.log(state.clock.getDelta())
        if (group.current) {
            // group.current.rotation.x = (0.3) * Math.sin(clock.elapsedTime)
            // group.current.rotation.y = (0.3) * Math.sin(clock.elapsedTime)
        }

        // if (ref.current) {
        //     ref.current.position.y = Math.sin(clock.elapsedTime + rand * 100) * 0.1 - 0.2
        //
        //     if (displaceRef.current.strength !== strength.current) {
        //         displaceRef.current.strength = MathUtils.lerp(
        //             displaceRef.current.strength, //
        //             strength.current,
        //             0.1
        //         )
        //     }
        //
        //     if (strength.current > 0) {
        //         displaceRef.current.offset.x += 0.3 * dt
        //     }
        // }

    })

    // const displaceRef = useRef(null)



    // function getCustomShaderMaterial() {
    //     return <CustomShaderMaterial
    //         ref={materialRef}
    //         baseMaterial={THREE.MeshPhysicalMaterial}
    //         // baseMaterial={() => materials['uv.gltb.export']}
    //         vertexShader={patchShaders(vert)}
    //         fragmentShader={frag}
    //         flatShading
    //         color={0xaf009c}
    //         roughness={0.2}
    //         metalness={0.1}
    //         uniforms={{
    //             uTime: {value: 0},
    //             waterColor: {
    //                 value: new THREE.Color('#af009c').convertLinearToSRGB(),
    //             },
    //             waterHighlight: {
    //                 value: new THREE.Color('#df9210').convertLinearToSRGB(),
    //             },
    //             offset: {
    //                 value: 0.4,
    //             },
    //             contrast: {
    //                 value: 3.1,
    //             },
    //             brightness: {
    //                 value: 1,
    //             },
    //             uHeight: {
    //                 value: 1,
    //             },
    //         }}
    //     />;
    // }

    return (
        <group ref={group} {...props} dispose={null}>


                    <mesh
                        ref={refa}
                        geometry={nodes["Lizzie002"].geometry}
                        // geometry={voxelMesh}
                        material={materials["Lizard_Mat.002"]}
                        position={[0.05, -0.7, -0.00]}
                        rotation={[0, -Math.PI, -Math.PI]}
                        scale={0.20}
                    >

                    </mesh>

                {/*    */}
                {/*<LayerMaterial>*/}
                {/*    <material */}
                {/*    />*/}
                {/*</LayerMaterial>*/}


        </group>
    )
}

useGLTF.preload('/lizzie-swirl-small.glb')
